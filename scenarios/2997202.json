{
  "flow": [
    {
      "id": 6,
      "mapper": {},
      "module": "make:watchAScenarios",
      "version": 1,
      "metadata": {
        "restore": {
          "parameters": {
            "team": {
              "mode": "chose",
              "label": "My Team"
            },
            "folder": {
              "mode": "chose"
            },
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "make"
              },
              "label": "Karim's Make connection (karim@el-kassas.com)"
            },
            "organization": {
              "mode": "chose",
              "label": "ðŸŸ£ Zynera"
            }
          }
        },
        "designer": {
          "x": 0,
          "y": 0,
          "name": "Watch Scenarios"
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:make",
            "label": "Connection",
            "required": true
          },
          {
            "name": "organization",
            "type": "select",
            "label": "Organization ID"
          },
          {
            "name": "islinked",
            "type": "boolean",
            "label": "Only Active Scenarios"
          },
          {
            "name": "limit",
            "type": "uinteger",
            "label": "Limit",
            "required": true
          },
          {
            "name": "team",
            "type": "select",
            "label": "Team ID"
          },
          {
            "name": "folder",
            "type": "select",
            "label": "Folder ID"
          }
        ]
      },
      "parameters": {
        "team": 170759,
        "limit": 1,
        "__IMTCONN__": 2417656,
        "organization": 277690
      }
    },
    {
      "id": 13,
      "filter": {
        "name": "Not Backup",
        "conditions": [
          [
            {
              "a": "{{6.id}}",
              "b": "{{var.scenario.id}}",
              "o": "text:equal"
            }
          ]
        ]
      },
      "mapper": {
        "scope": "roundtrip",
        "variables": [
          {
            "name": "Repo Owner",
            "value": "karimzynera"
          },
          {
            "name": "Repo Name",
            "value": "make-backup"
          },
          {
            "name": "Repo Path",
            "value": "scenarios/{{6.id}}.json"
          }
        ]
      },
      "module": "util:SetVariables",
      "version": 1,
      "metadata": {
        "expect": [
          {
            "name": "variables",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Variable name",
                "required": true
              },
              {
                "name": "value",
                "type": "any",
                "label": "Variable value"
              }
            ],
            "type": "array",
            "label": "Variables"
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": [
                "roundtrip",
                "execution"
              ]
            }
          }
        ],
        "restore": {
          "expect": {
            "scope": {
              "label": "One cycle"
            },
            "variables": {
              "items": [
                null,
                null,
                null
              ]
            }
          }
        },
        "designer": {
          "x": 300,
          "y": 0,
          "name": "Set Globals"
        },
        "interface": [
          {
            "name": "Repo Owner",
            "type": "any",
            "label": "Repo Owner"
          },
          {
            "name": "Repo Name",
            "type": "any",
            "label": "Repo Name"
          },
          {
            "name": "Repo Path",
            "type": "any",
            "label": "Repo Path"
          }
        ]
      },
      "parameters": {}
    },
    {
      "id": 1,
      "mapper": {
        "select": "file",
        "scenario": "{{6.id}}"
      },
      "module": "make:getAScenarioBlueprint",
      "version": 1,
      "metadata": {
        "expect": [
          {
            "name": "scenario",
            "type": "text",
            "label": "Scenario ID",
            "required": true
          },
          {
            "name": "draft",
            "type": "boolean",
            "label": "Draft"
          },
          {
            "name": "select",
            "type": "select",
            "label": "Return a Blueprint",
            "required": true,
            "validate": {
              "enum": [
                "json",
                "string",
                "file"
              ]
            }
          }
        ],
        "restore": {
          "expect": {
            "draft": {
              "mode": "chose"
            },
            "select": {
              "mode": "chose",
              "label": "In a JSON File"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "make"
              },
              "label": "Karim's Make connection (karim@el-kassas.com)"
            }
          }
        },
        "advanced": true,
        "designer": {
          "x": 600,
          "y": 0,
          "name": "Get Blueprint"
        },
        "interface": [
          {
            "name": "blueprint",
            "type": "buffer",
            "label": "Blueprint Data",
            "semantic": "file:data"
          },
          {
            "name": "filename",
            "type": "filename",
            "label": "File Name",
            "semantic": "file:name"
          },
          {
            "name": "gitSHA",
            "type": "text",
            "label": "GitHub SHA"
          },
          {
            "name": "scheduling",
            "spec": [
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "between",
                "spec": {
                  "type": "date"
                },
                "type": "array",
                "label": "Between"
              },
              {
                "name": "interval",
                "type": "number",
                "label": "Interval"
              },
              {
                "name": "restrict",
                "spec": {
                  "spec": [
                    {
                      "name": "days",
                      "spec": {
                        "type": "number"
                      },
                      "type": "array",
                      "label": "Days"
                    },
                    {
                      "name": "time",
                      "spec": {
                        "type": "text"
                      },
                      "type": "array",
                      "label": "Time"
                    },
                    {
                      "name": "months",
                      "spec": {
                        "type": "number"
                      },
                      "type": "array",
                      "label": "Months"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "Restrict"
              },
              {
                "name": "date",
                "time": true,
                "type": "date",
                "label": "Date"
              },
              {
                "name": "time",
                "type": "text",
                "label": "Time"
              },
              {
                "name": "days",
                "type": "array",
                "label": "Days"
              },
              {
                "name": "months",
                "type": "array",
                "label": "Months"
              }
            ],
            "type": "collection",
            "label": "Scheduling"
          },
          {
            "name": "concept",
            "type": "boolean",
            "label": "Concept"
          },
          {
            "name": "idSequence",
            "type": "uinteger",
            "label": "ID Sequence"
          },
          {
            "name": "created",
            "time": true,
            "type": "date",
            "label": "Created"
          },
          {
            "name": "last_edit",
            "time": true,
            "type": "date",
            "label": "Last Edit"
          },
          {
            "name": "metadata",
            "spec": [
              {
                "name": "input_spec",
                "type": "any",
                "label": "Input Spec"
              },
              {
                "name": "output_spec",
                "type": "any",
                "label": "Output Spec"
              }
            ],
            "type": "collection",
            "label": "Metadata"
          },
          {
            "name": "length",
            "type": "number",
            "label": "Length"
          }
        ],
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:make",
            "label": "Connection",
            "required": true
          }
        ]
      },
      "parameters": {
        "__IMTCONN__": 2417656
      }
    },
    {
      "id": 12,
      "mapper": {
        "ca": "",
        "qs": [],
        "url": "https://api.github.com/repos/{{13.`Repo Owner`}}/{{13.`Repo Name`}}/contents/{{13.`Repo Path`}}",
        "data": "",
        "gzip": true,
        "method": "get",
        "headers": [
          {
            "name": "Authorization",
            "value": ""
          },
          {
            "name": "X-GitHub-Api-Version",
            "value": "2022-11-28"
          }
        ],
        "timeout": "",
        "useMtls": false,
        "authPass": "",
        "authUser": "",
        "bodyType": "raw",
        "contentType": "application/json",
        "serializeUrl": false,
        "shareCookies": false,
        "parseResponse": true,
        "followRedirect": true,
        "useQuerystring": false,
        "followAllRedirects": false,
        "rejectUnauthorized": true
      },
      "module": "http:ActionSendData",
      "version": 3,
      "metadata": {
        "expect": [
          {
            "name": "url",
            "type": "url",
            "label": "URL",
            "required": true
          },
          {
            "name": "serializeUrl",
            "type": "boolean",
            "label": "Serialize URL",
            "required": true
          },
          {
            "name": "method",
            "type": "select",
            "label": "Method",
            "required": true,
            "validate": {
              "enum": [
                "get",
                "head",
                "post",
                "put",
                "patch",
                "delete",
                "options"
              ]
            }
          },
          {
            "name": "headers",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Name",
                "required": true
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "array",
            "label": "Headers"
          },
          {
            "name": "qs",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Name",
                "required": true
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "array",
            "label": "Query String"
          },
          {
            "name": "bodyType",
            "type": "select",
            "label": "Body type",
            "validate": {
              "enum": [
                "raw",
                "x_www_form_urlencoded",
                "multipart_form_data"
              ]
            }
          },
          {
            "name": "parseResponse",
            "type": "boolean",
            "label": "Parse response",
            "required": true
          },
          {
            "name": "authUser",
            "type": "text",
            "label": "User name"
          },
          {
            "name": "authPass",
            "type": "password",
            "label": "Password"
          },
          {
            "name": "timeout",
            "type": "uinteger",
            "label": "Timeout",
            "validate": {
              "max": 300,
              "min": 1
            }
          },
          {
            "name": "shareCookies",
            "type": "boolean",
            "label": "Share cookies with other HTTP modules",
            "required": true
          },
          {
            "name": "ca",
            "type": "cert",
            "label": "Self-signed certificate"
          },
          {
            "name": "rejectUnauthorized",
            "type": "boolean",
            "label": "Reject connections that are using unverified (self-signed) certificates",
            "required": true
          },
          {
            "name": "followRedirect",
            "type": "boolean",
            "label": "Follow redirect",
            "required": true
          },
          {
            "name": "useQuerystring",
            "type": "boolean",
            "label": "Disable serialization of multiple same query string keys as arrays",
            "required": true
          },
          {
            "name": "gzip",
            "type": "boolean",
            "label": "Request compressed content",
            "required": true
          },
          {
            "name": "useMtls",
            "type": "boolean",
            "label": "Use Mutual TLS",
            "required": true
          },
          {
            "name": "contentType",
            "type": "select",
            "label": "Content type",
            "validate": {
              "enum": [
                "text/plain",
                "application/json",
                "application/xml",
                "text/xml",
                "text/html",
                "custom"
              ]
            }
          },
          {
            "name": "data",
            "type": "buffer",
            "label": "Request content"
          },
          {
            "name": "followAllRedirects",
            "type": "boolean",
            "label": "Follow all redirect",
            "required": true
          }
        ],
        "restore": {
          "expect": {
            "qs": {
              "mode": "chose"
            },
            "method": {
              "mode": "chose",
              "label": "GET"
            },
            "headers": {
              "mode": "chose",
              "items": [
                null,
                null
              ]
            },
            "bodyType": {
              "label": "Raw"
            },
            "contentType": {
              "label": "JSON (application/json)"
            }
          }
        },
        "designer": {
          "x": 900,
          "y": 0,
          "name": "Get Repo File"
        },
        "parameters": [
          {
            "name": "handleErrors",
            "type": "boolean",
            "label": "Evaluate all states as errors (except for 2xx and 3xx )",
            "required": true
          },
          {
            "name": "useNewZLibDeCompress",
            "type": "hidden"
          }
        ]
      },
      "parameters": {
        "handleErrors": false,
        "useNewZLibDeCompress": true
      }
    },
    {
      "id": 17,
      "mapper": {
        "ca": "",
        "qs": [],
        "url": "https://api.github.com/repos/{{13.`Repo Owner`}}/{{13.`Repo Name`}}/contents/{{13.`Repo Path`}}",
        "data": "{\n\t\"message\": \"\\\"{{6.name}}\\\" last edited by {{6.updatedByUser.name}} @ {{6.lastEdit}}\",\n\t\"content\": \"{{base64(1.blueprint)}}\",\n\t\"sha\": \"{{12.data.sha}}\"\n}",
        "gzip": true,
        "method": "put",
        "headers": [
          {
            "name": "Authorization",
            "value": ""
          },
          {
            "name": "X-GitHub-Api-Version",
            "value": "2022-11-28"
          }
        ],
        "timeout": "",
        "useMtls": false,
        "authPass": "",
        "authUser": "",
        "bodyType": "raw",
        "contentType": "application/json",
        "serializeUrl": false,
        "shareCookies": false,
        "parseResponse": true,
        "followRedirect": true,
        "useQuerystring": false,
        "followAllRedirects": false,
        "rejectUnauthorized": true
      },
      "module": "http:ActionSendData",
      "version": 3,
      "metadata": {
        "expect": [
          {
            "name": "url",
            "type": "url",
            "label": "URL",
            "required": true
          },
          {
            "name": "serializeUrl",
            "type": "boolean",
            "label": "Serialize URL",
            "required": true
          },
          {
            "name": "method",
            "type": "select",
            "label": "Method",
            "required": true,
            "validate": {
              "enum": [
                "get",
                "head",
                "post",
                "put",
                "patch",
                "delete",
                "options"
              ]
            }
          },
          {
            "name": "headers",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Name",
                "required": true
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "array",
            "label": "Headers"
          },
          {
            "name": "qs",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Name",
                "required": true
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "array",
            "label": "Query String"
          },
          {
            "name": "bodyType",
            "type": "select",
            "label": "Body type",
            "validate": {
              "enum": [
                "raw",
                "x_www_form_urlencoded",
                "multipart_form_data"
              ]
            }
          },
          {
            "name": "parseResponse",
            "type": "boolean",
            "label": "Parse response",
            "required": true
          },
          {
            "name": "authUser",
            "type": "text",
            "label": "User name"
          },
          {
            "name": "authPass",
            "type": "password",
            "label": "Password"
          },
          {
            "name": "timeout",
            "type": "uinteger",
            "label": "Timeout",
            "validate": {
              "max": 300,
              "min": 1
            }
          },
          {
            "name": "shareCookies",
            "type": "boolean",
            "label": "Share cookies with other HTTP modules",
            "required": true
          },
          {
            "name": "ca",
            "type": "cert",
            "label": "Self-signed certificate"
          },
          {
            "name": "rejectUnauthorized",
            "type": "boolean",
            "label": "Reject connections that are using unverified (self-signed) certificates",
            "required": true
          },
          {
            "name": "followRedirect",
            "type": "boolean",
            "label": "Follow redirect",
            "required": true
          },
          {
            "name": "useQuerystring",
            "type": "boolean",
            "label": "Disable serialization of multiple same query string keys as arrays",
            "required": true
          },
          {
            "name": "gzip",
            "type": "boolean",
            "label": "Request compressed content",
            "required": true
          },
          {
            "name": "useMtls",
            "type": "boolean",
            "label": "Use Mutual TLS",
            "required": true
          },
          {
            "name": "contentType",
            "type": "select",
            "label": "Content type",
            "validate": {
              "enum": [
                "text/plain",
                "application/json",
                "application/xml",
                "text/xml",
                "text/html",
                "custom"
              ]
            }
          },
          {
            "name": "data",
            "type": "buffer",
            "label": "Request content"
          },
          {
            "name": "followAllRedirects",
            "type": "boolean",
            "label": "Follow all redirect",
            "required": true
          }
        ],
        "restore": {
          "expect": {
            "qs": {
              "mode": "chose"
            },
            "method": {
              "mode": "chose",
              "label": "PUT"
            },
            "headers": {
              "mode": "chose",
              "items": [
                null,
                null
              ]
            },
            "bodyType": {
              "label": "Raw"
            },
            "contentType": {
              "label": "JSON (application/json)"
            }
          }
        },
        "designer": {
          "x": 1200,
          "y": 0,
          "name": "Upsert Repo File"
        },
        "parameters": [
          {
            "name": "handleErrors",
            "type": "boolean",
            "label": "Evaluate all states as errors (except for 2xx and 3xx )",
            "required": true
          },
          {
            "name": "useNewZLibDeCompress",
            "type": "hidden"
          }
        ]
      },
      "parameters": {
        "handleErrors": true,
        "useNewZLibDeCompress": true
      }
    }
  ],
  "name": "GitHub Scenario Backup V0",
  "metadata": {
    "instant": false,
    "version": 1,
    "designer": {
      "orphans": [],
      "samples": {
        "1": {
          "gitSHA": "5265df26c6df9ed77a5eeb39af1a37630ef52383",
          "length": 16412,
          "concept": false,
          "created": "2025-01-15T16:22:04.972Z",
          "filename": "blueprint.json",
          "metadata": {
            "input_spec": [],
            "output_spec": []
          },
          "blueprint": "IMTBuffer(16412, binary, 78a8053d47d90fd228ca59e10f920274390575a4): 7b22666c6f77223a5b7b226964223a36...",
          "last_edit": "2025-01-20T21:28:11.231Z",
          "idSequence": 29,
          "scheduling": {
            "time": "00:00",
            "type": "daily"
          }
        },
        "6": {
          "id": 2997202,
          "name": "GitHub Scenario Backup V0",
          "slots": null,
          "hookId": null,
          "teamId": 170759,
          "concept": false,
          "created": "2025-01-15T16:22:04.972Z",
          "deviceId": null,
          "dlqCount": 0,
          "folderId": null,
          "isActive": false,
          "isPaused": false,
          "islinked": false,
          "islocked": false,
          "lastEdit": "2025-01-20T21:28:11.231Z",
          "nextExec": null,
          "isinvalid": false,
          "iswaiting": false,
          "scheduling": {
            "time": "00:00",
            "type": "daily"
          },
          "description": "",
          "deviceScope": null,
          "chainingRole": "none",
          "usedPackages": [
            "make"
          ],
          "createdByUser": {
            "id": 294192,
            "name": "Karim El Kassas",
            "email": "karim@zynera.ai"
          },
          "updatedByUser": {
            "id": 294192,
            "name": "Karim El Kassas",
            "email": "karim@zynera.ai"
          }
        },
        "12": {
          "data": {
            "status": "404",
            "message": "Not Found",
            "documentation_url": "https://docs.github.com/rest/repos/contents#get-repository-content"
          },
          "headers": [
            {
              "name": "x-github-request-id",
              "value": "CCD7:2A5E50:6471AF:72DA62:678EC2B0"
            }
          ],
          "fileSize": 127,
          "statusCode": 404,
          "cookieHeaders": []
        },
        "13": {
          "Repo Name": "make-backup",
          "Repo Path": "scenarios/2997202.json",
          "Repo Owner": "karimzynera"
        },
        "17": {
          "data": {
            "commit": {
              "sha": "0f09839813fc2071d33dcb07e1b5e3acedf19fbc",
              "url": "https://api.github.com/repos/karimzynera/make-backup/git/commits/0f09839813fc2071d33dcb07e1b5e3acedf...",
              "tree": {
                "sha": "648d79a6cb84b331da6311831a8a6e4f40d27266",
                "url": "https://api.github.com/repos/karimzynera/make-backup/git/trees/648d79a6cb84b331da6311831a8a6e4f40d27..."
              },
              "author": {
                "date": "2025-01-20T21:40:49Z",
                "name": "Karim",
                "email": "karim@zynera.ai"
              },
              "message": "\"\" last edited by  @",
              "node_id": "C_kwDONqwM8NoAKDBmMDk4Mzk4MTNmYzIwNzFkMzNkY2IwN2UxYjVlM2FjZWRmMTlmYmM",
              "parents": [
                {
                  "sha": "d8822c681f3b7025a7460026a7e86c2bd0297ad5",
                  "url": "https://api.github.com/repos/karimzynera/make-backup/git/commits/d8822c681f3b7025a7460026a7e86c2bd02...",
                  "html_url": "https://github.com/karimzynera/make-backup/commit/d8822c681f3b7025a7460026a7e86c2bd0297ad5"
                }
              ],
              "html_url": "https://github.com/karimzynera/make-backup/commit/0f09839813fc2071d33dcb07e1b5e3acedf19fbc",
              "committer": {
                "date": "2025-01-20T21:40:49Z",
                "name": "Karim",
                "email": "karim@zynera.ai"
              },
              "verification": {
                "reason": "unsigned",
                "payload": null,
                "verified": false,
                "signature": null,
                "verified_at": null
              }
            },
            "content": {
              "sha": "9033296159b99df844df0d5740fc8ea1d2572a84",
              "url": "https://api.github.com/repos/karimzynera/make-backup/contents/scenarios/testo.json?ref=main",
              "name": "testo.json",
              "path": "scenarios/testo.json",
              "size": 5,
              "type": "file",
              "_links": {
                "git": "https://api.github.com/repos/karimzynera/make-backup/git/blobs/9033296159b99df844df0d5740fc8ea1d2572...",
                "html": "https://github.com/karimzynera/make-backup/blob/main/scenarios/testo.json",
                "self": "https://api.github.com/repos/karimzynera/make-backup/contents/scenarios/testo.json?ref=main"
              },
              "git_url": "https://api.github.com/repos/karimzynera/make-backup/git/blobs/9033296159b99df844df0d5740fc8ea1d2572...",
              "html_url": "https://github.com/karimzynera/make-backup/blob/main/scenarios/testo.json",
              "download_url": "https://raw.githubusercontent.com/karimzynera/make-backup/main/scenarios/testo.json"
            }
          },
          "headers": [
            {
              "name": "x-github-request-id",
              "value": "2007:2A5E50:64835E:72EEEF:678EC2E0"
            }
          ],
          "fileSize": 1964,
          "statusCode": 201,
          "cookieHeaders": []
        }
      }
    },
    "scenario": {
      "dlq": false,
      "slots": null,
      "dataloss": false,
      "maxErrors": 3,
      "autoCommit": true,
      "roundtrips": 1,
      "sequential": false,
      "confidential": false,
      "freshVariables": false,
      "autoCommitTriggerLast": true
    }
  }
}